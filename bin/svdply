#!/bin/sh

CONF_FILE="/etc/sofin.conf.sh"
if [ -e "${CONF_FILE}" ]; then
    . "${CONF_FILE}"
    note "Validating environment"
    validate_env
else
    echo "FATAL: No configuration file found: ${CONF_FILE}"
    exit 1
fi

readonly APP_DOMAIN="${1}"
readonly APP_NAME="$(echo "${1}" | awk -F '[.]' '{print $1}')"
readonly APP_BRANCH="$(git name-rev --name-only HEAD)"
readonly APP_REPOSITORY="$(pwd)"
readonly APP_TARBALL="${APP_NAME}.tar.gz"
readonly DEFAULT_REMOTE="svd"

if [ "${APP_STAGE}" = "" ]; then
    APP_STAGE="staging" # default stage anyway
fi

if [ "${APP_USER}" = "" ]; then
    APP_USER="$USER"
fi

if [ ! -f "${APP_REPOSITORY}/.git/config" ]; then
    error "svddply must be run in git repository"
fi

if [ "${APP_NAME}" = "" ]; then
    error "Missing application name!"
fi

note "App name: ${APP_NAME}"
note "App domain: ${APP_DOMAIN}"
note "App branch: ${APP_BRANCH}"
note "App stage: ${APP_STAGE}"


first_deploy () {
    cwd="$(pwd)"
    cd ..
    note "Creating bare repository from current directory"
    # TODO: consider support for directories without git repository in it
    git clone --bare ${cwd} ${APP_NAME}.git > /dev/null 2>&1
    tar cf ${APP_TARBALL} ./${APP_NAME}.git
    ssh -o CheckHostIP=no "${APP_USER}@${APP_DOMAIN}" "mkdir -p ~/Repos/ ; rm -rf ${APP_NAME}.git"
    scp ./${APP_TARBALL} "${APP_USER}@${APP_DOMAIN}:Repos/${APP_TARBALL}" > /dev/null 2>&1
    rm -rf ./${APP_NAME}.git
    ssh -o CheckHostIP=no "${APP_USER}@${APP_DOMAIN}" "cd ~/Repos/ && tar xf ${APP_TARBALL} && rm ${APP_TARBALL}"
    cd "${cwd}"
    note "Done pushing repo to ${DEFAULT_REMOTE} /Repos remote!"
}


note "Pushing current repository state to remote: ${DEFAULT_REMOTE}, on branch: ${APP_BRANCH}"
git remote rm ${DEFAULT_REMOTE}
git remote add ${DEFAULT_REMOTE} "${APP_USER}@${APP_DOMAIN}:Repos/${APP_NAME}.git" > /dev/null 2>&1
git push ${DEFAULT_REMOTE} ${APP_BRANCH} > /dev/null 2>&1 && note "Remote repository updated" || first_deploy

note "Deploying application ${APP_NAME} for domain ${APP_DOMAIN}"
ssh -o CheckHostIP=no "${APP_USER}@${APP_DOMAIN}" "\$(readlink \$(which svddeployer)) -n ${APP_NAME} -o ${APP_DOMAIN} -s ${APP_STAGE} -b ${APP_BRANCH} -d" || error "Deploy isn't possible without installed deployer on remote host!\nConsider doing 'sofin get thess'" # -d is temporary

note "Deploy complete. It might take up up to 15s before Coreginx reloads changes."
note "Application should be available at: http://${APP_DOMAIN}"
