{ 
    "softwareName": "Postgresql92",
    "install": {
        "commands": "sofin get postgresql92",
        "expectOutput": "All done"
    },
    "staticPort": 5432,
    "configure": {
        "commands": " \
test ! -d SERVICE_PREFIX/database/base && SERVICE_ROOT/exports/initdb -D SERVICE_PREFIX/database && rm -f SERVICE_PREFIX/database/pg_hba.conf && rm -f SERVICE_PREFIX/database/postgresql.conf \
printf ' \
# Default Postgresql service configuration \
local all all trust \
host all all 127.0.0.1/32 trust \
# host all all 0.0.0.0/0 ident \
host all all 0.0.0.0/0 password \
' > SERVICE_PREFIX/database/pg_hba.conf \
 \
printf \" \
port = SERVICE_PORT \
max_connections = 100 \
checkpoint_segments = 24 \
password_encryption = on \
shared_buffers = 64MB \
temp_buffers = 32MB \
work_mem = 16MB \
max_stack_depth = 7MB \
 \
logging_collector = true \
\" > SERVICE_PREFIX/database/postgresql.conf && echo listen_addresses=\\'SERVICE_DOMAIN\\' >> SERVICE_PREFIX/database/postgresql.conf \
"
    },
    "start": {
        "commands": " \
if [ \"$(id -u)\" != \"0\" ]; then \
    printf 'Linking configuration file\n' >> SERVICE_LOG \
    ln -sv SERVICE_PREFIX/database/postgresql.conf SERVICE_CONF >> SERVICE_LOG \
    printf 'Launching Postgresql\n' >> SERVICE_LOG \
    SERVICE_ROOT/exports/pg_ctl -D SERVICE_PREFIX/database -l SERVICE_LOG -o \"-k SERVICE_PREFIX\" start >> SERVICE_LOG \
    # ln -sv SERVICE_PREFIX/database/postmaster.pid SERVICE_PID >> SERVICE_LOG \
else \
    printf \"Postgresql can't be run as root!\n\" >> SERVICE_LOG \
    touch SERVICE_PREFIX/.stop \
fi \
"
    },
    "stop": {
        "commands": " \
SERVICE_ROOT/exports/pg_ctl -m fast --timeout=45 -w -D SERVICE_PREFIX/database stop >> SERVICE_LOG \
"
    },
    "afterStop": {
        "commands": " \
test -f SERVICE_PREFIX/database/postmaster.pid && rm -f SERVICE_PREFIX/database/postmaster.pid \
"
    }
}
