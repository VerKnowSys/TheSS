{
    "softwareName": "Nginx",
    "staticPort": 80,
    "schedulers": [
        "0 0/1 * * * ?! \
        SERVICE_ROOT/exports/nginx -c SERVICE_CONF -t && \
        SERVICE_ROOT/exports/nginx -c SERVICE_CONF -s reload \
        "
    ],
    "install": {
        "commands": "sofin get nginx",
        "expectOutput": "All done"
    },
    "start": {
        "commands": " \
echo 'Launching Nginx' >> SERVICE_LOG \
SERVICE_ROOT/exports/nginx -c SERVICE_CONF && echo 'Nginx started' >> SERVICE_LOG \
"
    },
    "afterStop": {
        "commands": ""
    },
    "stop": {
        "commands": " \
SERVICE_ROOT/exports/nginx -c SERVICE_CONF -s stop && echo 'Nginx stopped' >> SERVICE_LOG \
"
    },
    "configure": {
        "commands": " \
printf \" \
worker_processes 4; \
# pid SERVICE_PID; \
events { \
    worker_connections 1024; \
} \
 \
http { \
    include SERVICE_ROOT/conf/mime.types; \
    default_type application/octet-stream; \
    sendfile on; \
    gzip on; \
    gzip_disable \"msie6\"; \
    gzip_vary on; \
    gzip_proxied any; \
    gzip_comp_level 1; \
    gzip_buffers 16 8k; \
    gzip_http_version 1.1; \
    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript; \
    keepalive_timeout 270; \
    error_log SERVICE_LOG; \
    include /Public/*.conf; \
} \
\" > SERVICE_CONF \
"
    },
    "validate": {
        "commands": " \
SERVICE_ROOT/exports/nginx -t -c SERVICE_CONF && echo 'Nginx started' >> SERVICE_LOG \
",
        "expectOutput": "test is successful"
    },
    "reload": {
        "commands": " \
echo 'Reloading Nginx' >> SERVICE_LOG \
SERVICE_ROOT/exports/nginx -c SERVICE_CONF -s reload && echo 'Nginx reloaded successfully' >> SERVICE_LOG \
"
    }
}
