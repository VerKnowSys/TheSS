#!/bin/sh

readonly BEGIN_TIMER=$(date +%s)
readonly JOBS="8"
readonly QT="${QT}"

. /etc/sofin.conf.sh
if [ "$(id -u)" = "0" ]; then
    . /etc/profile_sofin
else
    . $HOME/.profile
fi
note "Loaded Sofin environment"

QMAKE_BIN="qmake"
if [ "${QT}" != "" ]; then
    QMAKE_BIN="${QT}/exports/qmake"
fi

note "Building using QT prefix: ${QT}"

build () {
    QMAKE_OPTS=""
    MAKE_OPTS_BUILD="-j${JOBS} -s"
    case "${SYSTEM_NAME}" in
        Darwin)
            MAKE_OPTS_BUILD="-j${JOBS} --silent"
            QMAKE_OPTS="-spec macx-clang"
            ;;
        Linux)
            MAKE_OPTS_BUILD="-j${JOBS} -s"
            ;;
    esac

    (${QMAKE_BIN} ${QMAKE_OPTS} Core.pro) || exit 1
    (note "Building Core" && make ${MAKE_OPTS_BUILD} && note "Successfully built core\n") || exit 1

    case "$1" in
        dispel)
            (${QMAKE_BIN} ${QMAKE_OPTS} Dispel.pro) || exit 1
            (note "Building Dispel" && make ${MAKE_OPTS_BUILD} && note "Successfully built svddispel\n") || exit 1
            ;;

        shell|svdshell)
            (${QMAKE_BIN} ${QMAKE_OPTS} Shell.pro) || exit 1
            (note "Building Shell" && make ${MAKE_OPTS_BUILD} && note "Successfully built svdshell\n") || exit 1
            ;;

        panel|svdpanel)
            (${QMAKE_BIN} ${QMAKE_OPTS} Panel.pro) || exit 1
            (note "Building Panel" && make ${MAKE_OPTS_BUILD} && note "Successfully built svdpanel\n") || exit 1
            ;;

        ss|svdss)
            (${QMAKE_BIN} ${QMAKE_OPTS} TheSS.pro) || exit 1
            (note "Building Service Spawner" && make ${MAKE_OPTS_BUILD} && note "Successfully built ss\n") || exit 1
            ;;

        dw|svddw|deathwatcher)
            (${QMAKE_BIN} ${QMAKE_OPTS} DeathWatch.pro) || exit 1
            (note "Building Death Watcher" && make ${MAKE_OPTS_BUILD} && note "Successfully built dw\n") || exit 1
            ;;

        tests|test)
            (${QMAKE_BIN} ${QMAKE_OPTS} TestSS.pro) || exit 1
            (note "Building Tests" && make ${MAKE_OPTS_BUILD} && note "Successfully built tests\n") || exit 1
            ;;

        deployer|deploy|depl|d)
            (${QMAKE_BIN} ${QMAKE_OPTS} WAD.pro) || exit 1
            (note "Building Deployer" && make ${MAKE_OPTS_BUILD} && note "Successfully built svddeployer\n") || exit 1
            ;;

        coreginx_helper|cgx|c)
            (${QMAKE_BIN} ${QMAKE_OPTS} CoreginxHelper.pro) || exit 1
            (note "Building Coreginx Helper" && make ${MAKE_OPTS_BUILD} && note "Successfully built svdcoreginx_helper\n") || exit 1
            ;;

        *)
            if [ "$SYSTEM_NAME" = "Linux" ]; then
                sed -i -e 's/THESS_TEST_MODE/THESS_NORMAL_MODE/' src/Common.pro
            else
                sed -i '' -e 's/THESS_TEST_MODE/THESS_NORMAL_MODE/' src/Common.pro
            fi

            (${QMAKE_BIN} ${QMAKE_OPTS} Shell.pro) || exit 1
            (note "Building Shell" && make ${MAKE_OPTS_BUILD} && note "Successfully built svdshell\n") || exit 1

            (${QMAKE_BIN} ${QMAKE_OPTS} Dispel.pro) || exit 1
            (note "Building Dispel" && make ${MAKE_OPTS_BUILD} && note "Successfully built svddispel\n") || exit 1

            (${QMAKE_BIN} ${QMAKE_OPTS} DeathWatch.pro) || exit 1
            (note "Building Death Watcher" && make ${MAKE_OPTS_BUILD} && note "Successfully built svddw\n") || exit 1

            (${QMAKE_BIN} ${QMAKE_OPTS} Notifications.pro) || exit 1
            (note "Building Notifications" && make ${MAKE_OPTS_BUILD} && note "Successfully built Notifications\n") || exit 1

            (${QMAKE_BIN} ${QMAKE_OPTS} WAD.pro) || exit 1
            (note "Building Deployer" && make ${MAKE_OPTS_BUILD} && note "Successfully built svddeployer\n") || exit 1

            (${QMAKE_BIN} ${QMAKE_OPTS} TheSS.pro) || exit 1
            (note "Building Service Spawner" && make ${MAKE_OPTS_BUILD} && note "Successfully built svdss\n") || exit 1

            (${QMAKE_BIN} ${QMAKE_OPTS} Panel.pro) || exit 1
            (note "Building Panel" && make ${MAKE_OPTS_BUILD} && note "Successfully built svdpanel\n") || exit 1

            (${QMAKE_BIN} ${QMAKE_OPTS} CoreginxHelper.pro) || exit 1
            (note "Building Coreginx Helper" && make ${MAKE_OPTS_BUILD} && note "Successfully built svdcoreginx_helper\n") || exit 1

            ;;
    esac
}


set_pax_if_grsec () {
    if [ "${SYSTEM_NAME}" = "Linux" ]; then
        uname -r | grep grsec
        if [ "$?" = "0" ]; then
            paxctl -cm $*
        fi
    fi
}

build "$1"
set_pax_if_grsec bin/svdpanel bin/svdshell bin/svdss bin/svdnotify bin/svddw bin/svddispel bin/svddeployer bin/svdcoreginx_helper
readonly END_TIMER=$(date +%s)
note "Build completed in $(echo ${END_TIMER} - ${BEGIN_TIMER} | ${BC_BIN}) seconds."
