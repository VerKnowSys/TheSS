{
    "softwareName": "Passenger19",
    "install": {
        "commands": "sofin get passenger19",
        "expectOutput": "All done"
    },
    "start": {
        "commands": "
printf 'Launching Passenger19\n' >> SERVICE_LOG 2>&1
SERVICE_ROOT/exports/nginx -c SERVICE_PREFIX/service.conf
"
    },
    "stop": {
        "commands": "
SERVICE_ROOT/exports/nginx -c SERVICE_PREFIX/service.conf -s stop
"
    },
    "validate": {
        "commands": "
test ! -d SERVICE_PREFIX/SERVICE_DOMAIN && mkdir -p SERVICE_PREFIX/SERVICE_DOMAIN
test ! -f SERVICE_PREFIX/service.conf && printf \"
worker_processes 2;
events {
    worker_connections 1024;
}

http {
    include SERVICE_ROOT/conf/mime.types;
    default_type application/octet-stream;
    sendfile on;
    keepalive_timeout 270;
    error_log SERVICE_LOG;

    passenger_root SERVICE_ROOT/lib/passenger19;
    passenger_ruby SERVICE_ROOT/exports/ruby;

    server {
        listen $(cat SERVICE_PREFIX/.ports/0);
        server_name SERVICE_DOMAIN;
        passenger_enabled on;
        rails_env production;
        root SERVICE_PREFIX/SERVICE_DOMAIN/public;
    }
}
\" > SERVICE_PREFIX/service.conf

SERVICE_ROOT/exports/nginx -t -c SERVICE_PREFIX/service.conf",
        "expectOutput": "test is successful"
    },
    "reload": {
        "commands": "
printf 'Reloading Passenger19\n' >> SERVICE_LOG 2>&1
SERVICE_ROOT/exports/nginx -c SERVICE_PREFIX/service.conf -s reload
"
    }
}